{"version":3,"sources":["Common/Components/Balls.tsx","Containers/App/index.tsx","index.tsx"],"names":["Circle","x","y","radius","dx","dy","color","speedMultiplier","Math","log","random","this","hueA","hueB","hue","ctx","beginPath","fillStyle","arc","PI","fill","width","height","draw","Wrapper","styled","div","balls","props","canvasRef","React","createRef","animationFrame","onResize","bind","init","o","windowArea","window","innerHeight","innerWidth","ballsCount","ceil","maxRadius","devicePixelRatio","push","cancelAnimationFrame","isNull","current","parentElement","offsetWidth","offsetHeight","getContext","generateBalls","fillRect","forEach","b","animate","requestAnimationFrame","debounce","resetCanvas","addEventListener","removeEventListener","ref","id","Component","GlobalStyles","createGlobalStyle","Scene","main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccf66e52.chunk.js","sourcesContent":["import debounce from 'lodash/debounce';\nimport random from 'lodash/random';\nimport React from 'react';\nimport styled from 'styled-components';\n\nclass Circle {\n  private dx: number;\n  private dy: number;\n  private color: string;\n\n  constructor(private x: number, private y: number, private radius: number) {\n    const speedMultiplier = Math.log(radius);\n\n    const dx = random(1, speedMultiplier);\n    this.dx = dx * (random(0, 1) ? 1 : -1);\n\n    const dy = random(1, speedMultiplier);\n    this.dy = dy * (random(0, 1) ? 1 : -1);\n\n    const hueA = [0, 50];\n    const hueB = [225, 275];\n    const hue = random(0, 1)\n      ? random(hueA[0], hueA[1])\n      : random(hueB[0], hueB[1]);\n\n    this.color = `hsl(${hue}, 100%, 50%)`;\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    ctx.beginPath();\n    ctx.fillStyle = this.color;\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fill();\n  }\n\n  animate(width: number, height: number, ctx: CanvasRenderingContext2D): void {\n    this.x += this.dx;\n    this.y += this.dy;\n\n    if (this.x + this.radius > width || this.x - this.radius < 0) {\n      this.dx = -this.dx;\n    }\n\n    if (this.y + this.radius > height || this.y - this.radius < 0) {\n      this.dy = -this.dy;\n    }\n\n    this.draw(ctx);\n  }\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: stretch;\n  justify-content: stretch;\n\n  #linesCanvas {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport default class balls extends React.Component {\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n  private ctx: CanvasRenderingContext2D | null = null;\n  private width = 0;\n  private height = 0;\n  private balls: Circle[] = [];\n  private animationFrame = 0;\n\n  constructor(props = {}) {\n    super(props);\n\n    this.onResize = this.onResize.bind(this);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n  }\n\n  private isNull(o: any): o is null {\n    return o === null;\n  }\n\n  private generateBalls(): void {\n    this.balls = [];\n\n    const windowArea = window.innerHeight * window.innerWidth;\n    const density = 4500;\n    let ballsCount = Math.ceil(windowArea / density);\n\n    const maxRadius = 35 * window.devicePixelRatio;\n    const minRadius = 10;\n\n    while (ballsCount--) {\n      const radius = random(minRadius, maxRadius);\n      const x = random(radius, this.width - radius * 2);\n      const y = random(radius, this.height - radius * 2);\n\n      this.balls.push(new Circle(x, y, radius));\n    }\n  }\n\n  private resetCanvas(): void {\n    cancelAnimationFrame(this.animationFrame);\n\n    if (this.isNull(this.canvasRef.current)) {\n      return;\n    }\n\n    this.width =\n      (this.canvasRef.current.parentElement?.offsetWidth || 0) *\n      window.devicePixelRatio;\n    this.height =\n      (this.canvasRef.current.parentElement?.offsetHeight || 0) *\n      window.devicePixelRatio;\n\n    this.canvasRef.current.width = this.width;\n    this.canvasRef.current.height = this.height;\n\n    this.ctx = this.canvasRef.current.getContext('2d');\n\n    this.generateBalls();\n  }\n\n  private draw(): void {\n    if (this.isNull(this.ctx)) {\n      return;\n    }\n\n    this.ctx.fillStyle = '#222222';\n    this.ctx.fillRect(0, 0, this.width, this.height);\n\n    this.balls.forEach(b =>\n      b.animate(this.width, this.height, this.ctx as CanvasRenderingContext2D)\n    );\n\n    this.animationFrame = requestAnimationFrame(this.draw);\n  }\n\n  private init(): void {\n    debounce(() => {\n      this.resetCanvas();\n      this.draw();\n    }, 1000 / 60)();\n  }\n\n  private onResize() {\n    this.init();\n  }\n\n  componentDidMount() {\n    this.init();\n\n    window.addEventListener('resize', this.onResize);\n  }\n\n  componentWillMount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <canvas ref={this.canvasRef} id=\"linesCanvas\" />\n      </Wrapper>\n    );\n  }\n}\n","import React, { Fragment } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Balls from 'Common/Components/Balls';\n\nconst GlobalStyles = createGlobalStyle`\n  *, *:before, *:after {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  body {\n    background: #222;\n  }\n`;\n\nconst Scene = styled.main`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst App: React.FC<{}> = () => {\n  return (\n    <Fragment>\n      <GlobalStyles />\n      <Scene>\n        <Balls />\n      </Scene>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}